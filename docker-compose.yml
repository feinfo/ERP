version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/apache/Dockerfile
    volumes:
      - ./app:/var/www/html
    expose:
      - "80" # usa expose para Nginx acessar internamente
    command: sh -c "composer install --no-dev --optimize-autoloader --no-scripts && apache2-foreground"
    env_file:
      - .env

  db:
    image: mysql:5.7
    container_name: mysql-ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot
      --email seu-email@techbuilders.com.br --agree-tos --no-eff-email
      -d techbuilders.com.br -d www.techbuilders.com.br"

volumes:
  mysql_data:
